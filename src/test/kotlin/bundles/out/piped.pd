bundle Foo {
   let bar : Bar, 
}
bundle Bar {
   let baz : Baz, 
}
bundle Baz {
   let qux : Int, 
}
bundle Human {
   let age : Int, 
   let dog : Dog, 
}
bundle Dog {
   let age : Int, 
}
bundle $$Int$Int$$ {
   let field0 : Int, 
   let field1 : Int, 
}
pi main() : Int {
   let foo : Foo = pipeLine$0(5, );
   let foo2 : Foo = pipeLine$1(3, );
   let human : Human = pipeLine$2(foo.bar.baz.qux * 3 + foo2.bar.baz.qux, foo2.bar.baz.qux + 1, );
   pipeLine$3(human.age, );
   pipeLine$4(human.dog.age, );
   >> 0;
}
pi getFoo(x : Int) : Foo {
   let baz : Baz = Baz(x);
   let bar : Bar = Bar(baz);
   let foo : Foo = Foo(bar);
   >> foo;
}
pi getHuman(hAge : Int, dAge : Int) : Human {
   let dog : Dog = Dog(dAge);
   let human : Human = Human(hAge, dog);
   >> human;
}
pi print(value : Int) : Int {
   >> value;
}
fun pipeLine$0(field$0 : Int, ): Foo {
   let pipeLineVar$0 : Int = 5;
   >> getFoo(pipeLineVar$0, );
}

fun pipeLine$1(field$0 : Int, ): Foo {
   let pipeLineVar$2 : Int = 3;
   >> getFoo(pipeLineVar$2, );
}

fun pipeLine$2(field$0 : Int, field$1 : Int, ): Human {
   let pipeLineVar$4 : $$Int$Int$$ = $$Int$Int$$(foo.bar.baz.qux * 3 + foo2.bar.baz.qux, foo2.bar.baz.qux + 1);
   >> getHuman(pipeLineVar$4.field$0, pipeLineVar$4.field$1, );
}

fun pipeLine$3(field$0 : Int, ): Int {
   let pipeLineVar$6 : Int = pipeLineVar$5;
   >> print(pipeLineVar$6, );
}

fun pipeLine$4(field$0 : Int, ): Int {
   let pipeLineVar$8 : Int = pipeLineVar$7;
   >> print(pipeLineVar$8, );
}

