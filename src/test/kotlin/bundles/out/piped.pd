bundle Foo {
   let bar : Bar, 
}
bundle Bar {
   let baz : Baz, 
}
bundle Baz {
   let qux : Int, 
}
bundle Human {
   let age : Int, 
   let dog : Dog, 
}
bundle Dog {
   let age : Int, 
}
bundle $$Int$Int$$ {
   let field0 : Int, 
   let field1 : Int, 
}
pi main() : Int {
   let foo : Foo = pipeLine2(5, );
   let foo2 : Foo = pipeLine5(3, );
   let human : Human = pipeLine8(foo.bar.baz.qux * 3 + foo2.bar.baz.qux, foo2.bar.baz.qux + 1, );
   pipeLine11(human.age, );
   pipeLine14(human.dog.age, );
   >> 0;
}
pi getFoo(x : Int) : Foo {
   let baz : Baz = Baz(x);
   let bar : Bar = Bar(baz);
   let foo : Foo = Foo(bar);
   >> foo;
}
pi getHuman(hAge : Int, dAge : Int) : Human {
   let dog : Dog = Dog(dAge);
   let human : Human = Human(hAge, dog);
   >> human;
}
pi print(value : Int) : Int {
   >> value;
}
fun pipeLine2(field0 : Int, ): Foo {
   let element$0 : Int = field0;
   let element$1 : Foo = getFoo(element$0, );
   >> element$1;
}

fun pipeLine5(field0 : Int, ): Foo {
   let element$3 : Int = field0;
   let element$4 : Foo = getFoo(element$3, );
   >> element$4;
}

fun pipeLine8(field0 : Int, field1 : Int, ): Human {
   let element$6 : $$Int$Int$$ = $$Int$Int$$(field0, field1);
   let element$7 : Human = getHuman(element$6.field0, element$6.field1, );
   >> element$7;
}

fun pipeLine11(field0 : Int, ): Int {
   let element$9 : Int = field0;
   let element$10 : Int = print(element$9, );
   >> element$10;
}

fun pipeLine14(field0 : Int, ): Int {
   let element$12 : Int = field0;
   let element$13 : Int = print(element$12, );
   >> element$13;
}

